/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// doc: https://zmk.dev/docs/keymaps/behaviors/hold-tap
// example: https://github.com/jamiethemorris/zmk-config/blob/master/config/sofle.keymap
// for &lt only

&lt {
    //require-prior-idle-ms = <50>;
    // not good, s+u quickly -> *, ctrl+s require quick tapping s
    //tapping-term-ms = <120>;
    //quick-tap-ms = <200>;
    //flavor = "tap-preferred";

    tapping-term-ms = <120>;
    quick-tap-ms = <200>;
    flavor = "balanced";

    //flavor = "hold-preferred";
    // flavor = "balanced";
};

// for &mt only

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;

    //require-prior-idle-ms = <50>;

    flavor = "hold-preferred";
};

/ {
    behaviors {
        // for keys like control, trigger hold behavior immediately, without the `require-prior-idle-ms`
        //mt2: mod-tap-2 {
        //	// compatible = "zmk,behavior-hold-tap";
        //	compatible = "zmk,behavior-mod-morph";
        //	tapping-term-ms = <200>;
        //	quick-tap-ms = <200>;
        //	flavor = "hold-preferred";
        //	#binding-cells = <0>;
        //	bindings = <&kp>, <&kp>;
        //};
        // for keys like control, trigger hold behavior immediately, without the `require-prior-idle-ms`

        lt2: layer-tap-2 {
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&trans  &kp Q         &kp W  &kp F             &kp P          &kp B        &kp J    &kp L             &kp U      &kp Y    &kp SEMI          &trans
&trans  &kp A         &kp R  &lt 2 S           &kp T          &kp G        &kp M    &lt 1 N           &lt 2 E    &lt 3 I  &kp O             &trans
&trans  &mt LSHIFT Z  &kp X  &kp C             &kp D          &kp V        &kp K    &kp H             &kp COMMA  &kp DOT  &mt RSHIFT SLASH  &trans
                             &mt LEFT_ALT TAB  &mt LCTRL ESC  &kp SPACE    &kp RET  &lt2 1 BACKSPACE  &kp LWIN
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp N1  &kp N2   &kp N3  &kp N4  &kp N5    &trans    &kp PAGE_UP  &kp PAGE_DOWN  &trans     &kp LA(LC(A))   &trans
&trans  &kp N6  &kp N7   &kp N8  &kp N9  &kp N0    &kp LEFT  &kp DOWN     &kp UP         &kp RIGHT  &trans          &trans
&trans  &trans  &kp DOT  &trans  &trans  &trans    &trans    &kp HOME     &kp END        &trans     &kp SCROLLLOCK  &trans
                         &trans  &trans  &trans    &trans    &trans       &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &trans     &kp AT     &kp HASH          &kp DLLR           &kp PERCENT    &kp CARET        &kp AMPS   &kp KP_MULTIPLY  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans  &kp TILDE  &kp GRAVE  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp PIPE       &kp EXCLAMATION  &kp EQUAL  &kp MINUS        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans     &trans     &trans            &trans             &trans         &kp BACKSLASH    &kp PLUS   &kp UNDER        &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                              &kp BACKSPACE     &kp DEL            &trans         &kt LEFT_SHIFT   &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3   &kp F4   &kp F5        &kp CAPS    &trans  &trans  &trans  &trans  &trans
&trans  &kp F6  &kp F7  &kp F8   &kp F9   &kp F10       &trans      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp F11  &kp F12  &none         &trans      &trans  &trans  &trans  &trans  &trans
                        &trans   &trans   &bt BT_CLR    &bt BT_CLR  &trans  &to 4
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp Q  &kp W  &kp E    &kp R       &kp T        &kp Y      &kp U          &kp I      &kp O       &kp P          &trans
&trans  &kp A  &kp S  &kp D    &kp F       &kp G        &kp H      &kp J          &kp K      &kp L       &kp SEMICOLON  &trans
&trans  &kp Z  &kp X  &kp C    &kp V       &kp B        &kp N      &kp M          &kp COMMA  &kp PERIOD  &kp SLASH      &trans
                      &kp TAB  &kp ESCAPE  &kp SPACE    &kp ENTER  &kp BACKSPACE  &to 0
            >;
        };
    };
};
